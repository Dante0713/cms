<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 3.0.3 (doctrine2-zf2inputfilterannotation) on 2018-04-19 02:38:07.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace Base\Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;
use Zend\InputFilter\InputFilter;
use Zend\InputFilter\Factory as InputFactory;
use Zend\InputFilter\InputFilterAwareInterface;
use Zend\InputFilter\InputFilterInterface;

/**
 * Base\Entity\SemesterClass
 *
 * @ORM\Entity(repositoryClass="SemesterClassRepository")
 * @ORM\Table(name="semester_class", indexes={@ORM\Index(name="fk_school_class_semester1_idx", columns={"semester_id"}), @ORM\Index(name="fk_semester_class_school1_idx", columns={"school_id"})})
 */
class SemesterClass implements InputFilterAwareInterface
{
    /**
     * Instance of InputFilterInterface.
     *
     * @var InputFilter
     */
    private $inputFilter;

    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @ORM\Column(type="integer")
     */
    protected $semester_id;

    /**
     * @ORM\Column(type="integer")
     */
    protected $school_id;

    /**
     * @ORM\Column(type="integer", nullable=true)
     */
    protected $grade;

    /**
     * @ORM\Column(type="string", length=45, nullable=true)
     */
    protected $chinese_name;

    /**
     * @ORM\Column(type="integer", nullable=true)
     */
    protected $class_no;

    /**
     * @ORM\Column(type="string", length=45, nullable=true)
     */
    protected $english_name;

    /**
     * @ORM\Column(type="integer", nullable=true)
     */
    protected $layout_id;

    /**
     * @ORM\Column(type="string", length=500, nullable=true)
     */
    protected $tutor_url;

    /**
     * @ORM\Column(type="string", length=500, nullable=true)
     */
    protected $homepage_logo;

    /**
     * @ORM\Column(type="string", length=500, nullable=true)
     */
    protected $homepage_top_image;

    /**
     * @ORM\Column(type="string", length=500, nullable=true)
     */
    protected $tuter_belief;

    /**
     * @ORM\Column(type="string", length=500, nullable=true)
     */
    protected $url;

    /**
     * @ORM\Column(type="smallint", nullable=true)
     */
    protected $is_limit_join;

    /**
     * @ORM\Column(type="smallint", nullable=true)
     */
    protected $is_display_longervity;

    /**
     * @ORM\Column(type="smallint", nullable=true)
     */
    protected $is_display_on_duty_person;

    /**
     * @ORM\Column(type="smallint", nullable=true)
     */
    protected $is_have_other_web;

    /**
     * @ORM\OneToMany(targetEntity="SemesterStudent", mappedBy="semesterClass")
     * @ORM\JoinColumn(name="id", referencedColumnName="semester_class_id", nullable=false)
     */
    protected $semesterStudents;

    /**
     * @ORM\OneToMany(targetEntity="TeacherCourse", mappedBy="semesterClass")
     * @ORM\JoinColumn(name="id", referencedColumnName="semester_class_id", nullable=false)
     */
    protected $teacherCourses;

    /**
     * @ORM\ManyToOne(targetEntity="Semester", inversedBy="semesterClasses")
     * @ORM\JoinColumn(name="semester_id", referencedColumnName="id", nullable=false)
     */
    protected $semester;

    /**
     * @ORM\ManyToOne(targetEntity="School", inversedBy="semesterClasses")
     * @ORM\JoinColumn(name="school_id", referencedColumnName="id", nullable=false)
     */
    protected $school;

    public function __construct()
    {
        $this->semesterStudents = new ArrayCollection();
        $this->teacherCourses = new ArrayCollection();
    }

    /**
     * Set the value of id.
     *
     * @param integer $id
     * @return \Base\Entity\SemesterClass
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get the value of id.
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set the value of semester_id.
     *
     * @param integer $semester_id
     * @return \Base\Entity\SemesterClass
     */
    public function setSemesterId($semester_id)
    {
        $this->semester_id = $semester_id;

        return $this;
    }

    /**
     * Get the value of semester_id.
     *
     * @return integer
     */
    public function getSemesterId()
    {
        return $this->semester_id;
    }

    /**
     * Set the value of school_id.
     *
     * @param integer $school_id
     * @return \Base\Entity\SemesterClass
     */
    public function setSchoolId($school_id)
    {
        $this->school_id = $school_id;

        return $this;
    }

    /**
     * Get the value of school_id.
     *
     * @return integer
     */
    public function getSchoolId()
    {
        return $this->school_id;
    }

    /**
     * Set the value of grade.
     *
     * @param integer $grade
     * @return \Base\Entity\SemesterClass
     */
    public function setGrade($grade)
    {
        $this->grade = $grade;

        return $this;
    }

    /**
     * Get the value of grade.
     *
     * @return integer
     */
    public function getGrade()
    {
        return $this->grade;
    }

    /**
     * Set the value of chinese_name.
     *
     * @param string $chinese_name
     * @return \Base\Entity\SemesterClass
     */
    public function setChineseName($chinese_name)
    {
        $this->chinese_name = $chinese_name;

        return $this;
    }

    /**
     * Get the value of chinese_name.
     *
     * @return string
     */
    public function getChineseName()
    {
        return $this->chinese_name;
    }

    /**
     * Set the value of class_no.
     *
     * @param integer $class_no
     * @return \Base\Entity\SemesterClass
     */
    public function setClassNo($class_no)
    {
        $this->class_no = $class_no;

        return $this;
    }

    /**
     * Get the value of class_no.
     *
     * @return integer
     */
    public function getClassNo()
    {
        return $this->class_no;
    }

    /**
     * Set the value of english_name.
     *
     * @param string $english_name
     * @return \Base\Entity\SemesterClass
     */
    public function setEnglishName($english_name)
    {
        $this->english_name = $english_name;

        return $this;
    }

    /**
     * Get the value of english_name.
     *
     * @return string
     */
    public function getEnglishName()
    {
        return $this->english_name;
    }

    /**
     * Set the value of layout_id.
     *
     * @param integer $layout_id
     * @return \Base\Entity\SemesterClass
     */
    public function setLayoutId($layout_id)
    {
        $this->layout_id = $layout_id;

        return $this;
    }

    /**
     * Get the value of layout_id.
     *
     * @return integer
     */
    public function getLayoutId()
    {
        return $this->layout_id;
    }

    /**
     * Set the value of tutor_url.
     *
     * @param string $tutor_url
     * @return \Base\Entity\SemesterClass
     */
    public function setTutorUrl($tutor_url)
    {
        $this->tutor_url = $tutor_url;

        return $this;
    }

    /**
     * Get the value of tutor_url.
     *
     * @return string
     */
    public function getTutorUrl()
    {
        return $this->tutor_url;
    }

    /**
     * Set the value of homepage_logo.
     *
     * @param string $homepage_logo
     * @return \Base\Entity\SemesterClass
     */
    public function setHomepageLogo($homepage_logo)
    {
        $this->homepage_logo = $homepage_logo;

        return $this;
    }

    /**
     * Get the value of homepage_logo.
     *
     * @return string
     */
    public function getHomepageLogo()
    {
        return $this->homepage_logo;
    }

    /**
     * Set the value of homepage_top_image.
     *
     * @param string $homepage_top_image
     * @return \Base\Entity\SemesterClass
     */
    public function setHomepageTopImage($homepage_top_image)
    {
        $this->homepage_top_image = $homepage_top_image;

        return $this;
    }

    /**
     * Get the value of homepage_top_image.
     *
     * @return string
     */
    public function getHomepageTopImage()
    {
        return $this->homepage_top_image;
    }

    /**
     * Set the value of tuter_belief.
     *
     * @param string $tuter_belief
     * @return \Base\Entity\SemesterClass
     */
    public function setTuterBelief($tuter_belief)
    {
        $this->tuter_belief = $tuter_belief;

        return $this;
    }

    /**
     * Get the value of tuter_belief.
     *
     * @return string
     */
    public function getTuterBelief()
    {
        return $this->tuter_belief;
    }

    /**
     * Set the value of url.
     *
     * @param string $url
     * @return \Base\Entity\SemesterClass
     */
    public function setUrl($url)
    {
        $this->url = $url;

        return $this;
    }

    /**
     * Get the value of url.
     *
     * @return string
     */
    public function getUrl()
    {
        return $this->url;
    }

    /**
     * Set the value of is_limit_join.
     *
     * @param integer $is_limit_join
     * @return \Base\Entity\SemesterClass
     */
    public function setIsLimitJoin($is_limit_join)
    {
        $this->is_limit_join = $is_limit_join;

        return $this;
    }

    /**
     * Get the value of is_limit_join.
     *
     * @return integer
     */
    public function getIsLimitJoin()
    {
        return $this->is_limit_join;
    }

    /**
     * Set the value of is_display_longervity.
     *
     * @param integer $is_display_longervity
     * @return \Base\Entity\SemesterClass
     */
    public function setIsDisplayLongervity($is_display_longervity)
    {
        $this->is_display_longervity = $is_display_longervity;

        return $this;
    }

    /**
     * Get the value of is_display_longervity.
     *
     * @return integer
     */
    public function getIsDisplayLongervity()
    {
        return $this->is_display_longervity;
    }

    /**
     * Set the value of is_display_on_duty_person.
     *
     * @param integer $is_display_on_duty_person
     * @return \Base\Entity\SemesterClass
     */
    public function setIsDisplayOnDutyPerson($is_display_on_duty_person)
    {
        $this->is_display_on_duty_person = $is_display_on_duty_person;

        return $this;
    }

    /**
     * Get the value of is_display_on_duty_person.
     *
     * @return integer
     */
    public function getIsDisplayOnDutyPerson()
    {
        return $this->is_display_on_duty_person;
    }

    /**
     * Set the value of is_have_other_web.
     *
     * @param integer $is_have_other_web
     * @return \Base\Entity\SemesterClass
     */
    public function setIsHaveOtherWeb($is_have_other_web)
    {
        $this->is_have_other_web = $is_have_other_web;

        return $this;
    }

    /**
     * Get the value of is_have_other_web.
     *
     * @return integer
     */
    public function getIsHaveOtherWeb()
    {
        return $this->is_have_other_web;
    }

    /**
     * Add SemesterStudent entity to collection (one to many).
     *
     * @param \Base\Entity\SemesterStudent $semesterStudent
     * @return \Base\Entity\SemesterClass
     */
    public function addSemesterStudent(SemesterStudent $semesterStudent)
    {
        $this->semesterStudents[] = $semesterStudent;

        return $this;
    }

    /**
     * Remove SemesterStudent entity from collection (one to many).
     *
     * @param \Base\Entity\SemesterStudent $semesterStudent
     * @return \Base\Entity\SemesterClass
     */
    public function removeSemesterStudent(SemesterStudent $semesterStudent)
    {
        $this->semesterStudents->removeElement($semesterStudent);

        return $this;
    }

    /**
     * Get SemesterStudent entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getSemesterStudents()
    {
        return $this->semesterStudents;
    }

    /**
     * Add TeacherCourse entity to collection (one to many).
     *
     * @param \Base\Entity\TeacherCourse $teacherCourse
     * @return \Base\Entity\SemesterClass
     */
    public function addTeacherCourse(TeacherCourse $teacherCourse)
    {
        $this->teacherCourses[] = $teacherCourse;

        return $this;
    }

    /**
     * Remove TeacherCourse entity from collection (one to many).
     *
     * @param \Base\Entity\TeacherCourse $teacherCourse
     * @return \Base\Entity\SemesterClass
     */
    public function removeTeacherCourse(TeacherCourse $teacherCourse)
    {
        $this->teacherCourses->removeElement($teacherCourse);

        return $this;
    }

    /**
     * Get TeacherCourse entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getTeacherCourses()
    {
        return $this->teacherCourses;
    }

    /**
     * Set Semester entity (many to one).
     *
     * @param \Base\Entity\Semester $semester
     * @return \Base\Entity\SemesterClass
     */
    public function setSemester(Semester $semester = null)
    {
        $this->semester = $semester;

        return $this;
    }

    /**
     * Get Semester entity (many to one).
     *
     * @return \Base\Entity\Semester
     */
    public function getSemester()
    {
        return $this->semester;
    }

    /**
     * Set School entity (many to one).
     *
     * @param \Base\Entity\School $school
     * @return \Base\Entity\SemesterClass
     */
    public function setSchool(School $school = null)
    {
        $this->school = $school;

        return $this;
    }

    /**
     * Get School entity (many to one).
     *
     * @return \Base\Entity\School
     */
    public function getSchool()
    {
        return $this->school;
    }

    /**
     * Not used, Only defined to be compatible with InputFilterAwareInterface.
     * 
     * @param \Zend\InputFilter\InputFilterInterface $inputFilter
     * @throws \Exception
     */
    public function setInputFilter(InputFilterInterface $inputFilter)
    {
        throw new \Exception("Not used.");
    }

    /**
     * Return a for this entity configured input filter instance.
     *
     * @return InputFilterInterface
     */
    public function getInputFilter()
    {
        if ($this->inputFilter instanceof InputFilterInterface) {
            return $this->inputFilter;
        }
        $factory = new InputFactory();
        $filters = array(
            array(
                'name' => 'id',
                'required' => true,
                'filters' => array(),
                'validators' => array(),
            ),
            array(
                'name' => 'semester_id',
                'required' => true,
                'filters' => array(),
                'validators' => array(),
            ),
            array(
                'name' => 'school_id',
                'required' => true,
                'filters' => array(),
                'validators' => array(),
            ),
            array(
                'name' => 'grade',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
            ),
            array(
                'name' => 'chinese_name',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
            ),
            array(
                'name' => 'class_no',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
            ),
            array(
                'name' => 'english_name',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
            ),
            array(
                'name' => 'layout_id',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
            ),
            array(
                'name' => 'tutor_url',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
            ),
            array(
                'name' => 'homepage_logo',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
            ),
            array(
                'name' => 'homepage_top_image',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
            ),
            array(
                'name' => 'tuter_belief',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
            ),
            array(
                'name' => 'url',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
            ),
            array(
                'name' => 'is_limit_join',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
            ),
            array(
                'name' => 'is_display_longervity',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
            ),
            array(
                'name' => 'is_display_on_duty_person',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
            ),
            array(
                'name' => 'is_have_other_web',
                'required' => false,
                'filters' => array(),
                'validators' => array(),
            ),
        );
        $this->inputFilter = $factory->createInputFilter($filters);

        return $this->inputFilter;
    }

    /**
     * Populate entity with the given data.
     * The set* method will be used to set the data.
     *
     * @param array $data
     * @return boolean
     */
    public function populate(array $data = array())
    {
        foreach ($data as $field => $value) {
            $setter = sprintf('set%s', ucfirst(
                str_replace(' ', '', ucwords(str_replace('_', ' ', $field)))
            ));
            if (method_exists($this, $setter)) {
                $this->{$setter}($value);
            }
        }

        return true;
    }

    /**
     * Return a array with all fields and data.
     * Default the relations will be ignored.
     * 
     * @param array $fields
     * @return array
     */
    public function getArrayCopy(array $fields = array())
    {
        $dataFields = array('id', 'semester_id', 'school_id', 'grade', 'chinese_name', 'class_no', 'english_name', 'layout_id', 'tutor_url', 'homepage_logo', 'homepage_top_image', 'tuter_belief', 'url', 'is_limit_join', 'is_display_longervity', 'is_display_on_duty_person', 'is_have_other_web');
        $relationFields = array('semester', 'school');
        $copiedFields = array();
        foreach ($relationFields as $relationField) {
            $map = null;
            if (array_key_exists($relationField, $fields)) {
                $map = $fields[$relationField];
                $fields[] = $relationField;
                unset($fields[$relationField]);
            }
            if (!in_array($relationField, $fields)) {
                continue;
            }
            $getter = sprintf('get%s', ucfirst(str_replace(' ', '', ucwords(str_replace('_', ' ', $relationField)))));
            $relationEntity = $this->{$getter}();
            $copiedFields[$relationField] = (!is_null($map))
                ? $relationEntity->getArrayCopy($map)
                : $relationEntity->getArrayCopy();
            $fields = array_diff($fields, array($relationField));
        }
        foreach ($dataFields as $dataField) {
            if (!in_array($dataField, $fields) && !empty($fields)) {
                continue;
            }
            $getter = sprintf('get%s', ucfirst(str_replace(' ', '', ucwords(str_replace('_', ' ', $dataField)))));
            $copiedFields[$dataField] = $this->{$getter}();
        }

        return $copiedFields;
    }

    public function __sleep()
    {
        return array('id', 'semester_id', 'school_id', 'grade', 'chinese_name', 'class_no', 'english_name', 'layout_id', 'tutor_url', 'homepage_logo', 'homepage_top_image', 'tuter_belief', 'url', 'is_limit_join', 'is_display_longervity', 'is_display_on_duty_person', 'is_have_other_web');
    }
}