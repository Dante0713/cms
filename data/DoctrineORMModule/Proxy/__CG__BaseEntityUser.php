<?php

namespace DoctrineORMModule\Proxy\__CG__\Base\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \Base\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * {@inheritDoc}
     * @return array
     */
    public function __sleep()
    {
        $properties = array_merge(['__isInitialized__'], parent::__sleep());

        if ($this->__isInitialized__) {
            $properties = array_diff($properties, array_keys($this->__getLazyProperties()));
        }

        return $properties;
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', [$username]);

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setChineseName($chinese_name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChineseName', [$chinese_name]);

        return parent::setChineseName($chinese_name);
    }

    /**
     * {@inheritDoc}
     */
    public function getChineseName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChineseName', []);

        return parent::getChineseName();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnglishName($english_name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnglishName', [$english_name]);

        return parent::setEnglishName($english_name);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnglishName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnglishName', []);

        return parent::getEnglishName();
    }

    /**
     * {@inheritDoc}
     */
    public function setNickname($nickname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNickname', [$nickname]);

        return parent::setNickname($nickname);
    }

    /**
     * {@inheritDoc}
     */
    public function getNickname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNickname', []);

        return parent::getNickname();
    }

    /**
     * {@inheritDoc}
     */
    public function setGender($gender)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGender', [$gender]);

        return parent::setGender($gender);
    }

    /**
     * {@inheritDoc}
     */
    public function getGender()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGender', []);

        return parent::getGender();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdentificationNumber($identification_number)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdentificationNumber', [$identification_number]);

        return parent::setIdentificationNumber($identification_number);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdentificationNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdentificationNumber', []);

        return parent::getIdentificationNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setReligion($religion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReligion', [$religion]);

        return parent::setReligion($religion);
    }

    /**
     * {@inheritDoc}
     */
    public function getReligion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReligion', []);

        return parent::getReligion();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreateTime($create_time)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreateTime', [$create_time]);

        return parent::setCreateTime($create_time);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreateTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreateTime', []);

        return parent::getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdateTime($update_time)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdateTime', [$update_time]);

        return parent::setUpdateTime($update_time);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdateTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdateTime', []);

        return parent::getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setAlternateEmail($alternate_email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAlternateEmail', [$alternate_email]);

        return parent::setAlternateEmail($alternate_email);
    }

    /**
     * {@inheritDoc}
     */
    public function getAlternateEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAlternateEmail', []);

        return parent::getAlternateEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setBookclubComment(\Base\Entity\BookclubComment $bookclubComment = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBookclubComment', [$bookclubComment]);

        return parent::setBookclubComment($bookclubComment);
    }

    /**
     * {@inheritDoc}
     */
    public function getBookclubComment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBookclubComment', []);

        return parent::getBookclubComment();
    }

    /**
     * {@inheritDoc}
     */
    public function setBookclubDiscuss(\Base\Entity\BookclubDiscuss $bookclubDiscuss = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBookclubDiscuss', [$bookclubDiscuss]);

        return parent::setBookclubDiscuss($bookclubDiscuss);
    }

    /**
     * {@inheritDoc}
     */
    public function getBookclubDiscuss()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBookclubDiscuss', []);

        return parent::getBookclubDiscuss();
    }

    /**
     * {@inheritDoc}
     */
    public function addMenu(\Base\Entity\Menu $menu)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMenu', [$menu]);

        return parent::addMenu($menu);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMenu(\Base\Entity\Menu $menu)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMenu', [$menu]);

        return parent::removeMenu($menu);
    }

    /**
     * {@inheritDoc}
     */
    public function getMenus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMenus', []);

        return parent::getMenus();
    }

    /**
     * {@inheritDoc}
     */
    public function addPage(\Base\Entity\Page $page)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPage', [$page]);

        return parent::addPage($page);
    }

    /**
     * {@inheritDoc}
     */
    public function removePage(\Base\Entity\Page $page)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePage', [$page]);

        return parent::removePage($page);
    }

    /**
     * {@inheritDoc}
     */
    public function getPages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPages', []);

        return parent::getPages();
    }

    /**
     * {@inheritDoc}
     */
    public function setStudent(\Base\Entity\Student $student = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStudent', [$student]);

        return parent::setStudent($student);
    }

    /**
     * {@inheritDoc}
     */
    public function getStudent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStudent', []);

        return parent::getStudent();
    }

    /**
     * {@inheritDoc}
     */
    public function addTeacher(\Base\Entity\Teacher $teacher)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTeacher', [$teacher]);

        return parent::addTeacher($teacher);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTeacher(\Base\Entity\Teacher $teacher)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTeacher', [$teacher]);

        return parent::removeTeacher($teacher);
    }

    /**
     * {@inheritDoc}
     */
    public function getTeachers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTeachers', []);

        return parent::getTeachers();
    }

    /**
     * {@inheritDoc}
     */
    public function addUserHasRole(\Base\Entity\UserHasRole $userHasRole)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUserHasRole', [$userHasRole]);

        return parent::addUserHasRole($userHasRole);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUserHasRole(\Base\Entity\UserHasRole $userHasRole)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUserHasRole', [$userHasRole]);

        return parent::removeUserHasRole($userHasRole);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserHasRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserHasRoles', []);

        return parent::getUserHasRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function setInputFilter(\Zend\InputFilter\InputFilterInterface $inputFilter)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInputFilter', [$inputFilter]);

        return parent::setInputFilter($inputFilter);
    }

    /**
     * {@inheritDoc}
     */
    public function getInputFilter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInputFilter', []);

        return parent::getInputFilter();
    }

    /**
     * {@inheritDoc}
     */
    public function populate(array $data = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'populate', [$data]);

        return parent::populate($data);
    }

    /**
     * {@inheritDoc}
     */
    public function getArrayCopy(array $fields = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArrayCopy', [$fields]);

        return parent::getArrayCopy($fields);
    }

    /**
     * {@inheritDoc}
     */
    public function hashPassword($player, $password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hashPassword', [$player, $password]);

        return parent::hashPassword($player, $password);
    }

}
